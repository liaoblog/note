{"meta":{"title":"Lznote","subtitle":"","description":"谨以此站记录我的生活经历以及学历过程","author":"XGS","url":"https://lznote.com","root":"/"},"pages":[{"title":"所有分类","date":"2021-04-29T14:04:40.164Z","updated":"2021-04-29T14:04:40.164Z","comments":true,"path":"categories/index.html","permalink":"https://lznote.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2021-05-21T15:34:29.086Z","updated":"2021-05-21T15:34:29.086Z","comments":false,"path":"about/index.html","permalink":"https://lznote.com/about/index.html","excerpt":"","text":"关于摸鱼摸鱼2021-3月建站，期间使用过fluid等主题，现在使用的是volantis主题。谨以此站帮助正在浏览本网站的你以及烂记性的自己。 时间轴 2021-05-22 增加了留言page删除了音乐解锁page 2021-05-21 调整了全局图片大小为500px，在style.styl文件里添加-.l_main .post img{max-width:500px;margin:0 auto;width:100%}设置了全局图片大小后，评论表情也会改变，所以在上面的代码下一行加上了-#valine_container img{width:auto}将文章头部信息调整到了文章底部，主题yml文件body的top_meta属性的值移动到bottom_meta属性值里面 2021-05-20 更换了网站logo，以LZ为元素制作而成，更贴合域名调整了网站全局字体大小，调整主题的yml文件末尾处fontsize的root属性将默认的16px改为了14px调整了网站h2标签的大小，为了让首页文章标题更小，yml文件末尾处fontsize的h2属性1.5rem改为1.35rem 2021-05-19 更换了域名以及名称-lznote-lznote.com 2021-05-18 添加了影单页面，记录我的观影之旅 2021-05-17 更换了背景图，主题yml文件的backstretch下的属性设为true，position设为fixed，images添加图片将首页文章版块设为模糊半透明，导航栏正常，将主题yml文件custom_css的navbar属性设为shadow，sidebar和body设为blur更改了鼠标样式，将主题yml文件custom_css的cursor属性改为true 2021-05-16 更换托管到了cloudflare，2021.5.14vercel突然无法访问，随即更换了托管平台删除了侧边栏博主信息版块更改了电视台直播页面的样式 2021-05-08 添加了一个代码复制弹窗通知功能，教程来自Colsrch-如何给博客添加弹窗通知 2021-05-05 新增了一个公告侧边栏小部件添加了代码块复制全文按钮，位于主题的_config.yml里面将541行clipboard属性改为true 2021-05-04 添加主题页面跳转加载进度，愣是找了好久，还没找到，最后发现在主题的_config.yml里面将619行pjax的animation属性改为nprogress 2021-05-02 添加了音乐解锁工具 2021-05-01 添加了疫情实时动态page添加了随机小姐姐page，调用了淘宝买家秀随机图api 2021-04-28 博客初成，使用volantis"},{"title":"","date":"2021-05-19T09:04:29.436Z","updated":"2021-05-19T09:04:29.436Z","comments":true,"path":"friends/index.html","permalink":"https://lznote.com/friends/index.html","excerpt":"","text":"添加我的友链友链申请格式1234标题： Lznote 链接： https:&#x2F;&#x2F;lznote.com简介： 一个喜欢折腾的小姐姐 头像： https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;liaoblog&#x2F;img@master&#x2F;blogpage&#x2F;noteimg.png123456- title: #名称 avatar: #头像 url: #链接 screenshot: # 截图 keywords: # 关键词 description: # 描述"},{"title":"","date":"2021-05-21T15:31:49.083Z","updated":"2021-05-21T15:31:49.083Z","comments":true,"path":"info/index.html","permalink":"https://lznote.com/info/index.html","excerpt":"","text":"如果你有什么好的建议或者问题可以在这里留下你的留言,记得遵守相关法律法规哦 ~"},{"title":"随机小姐姐","date":"2021-05-17T15:12:09.880Z","updated":"2021-05-17T15:12:09.880Z","comments":true,"path":"randomGirl/index.html","permalink":"https://lznote.com/randomGirl/index.html","excerpt":"","text":"点击刷新"},{"title":"所有标签","date":"2021-04-29T14:05:12.400Z","updated":"2021-04-29T14:05:12.400Z","comments":true,"path":"tags/index.html","permalink":"https://lznote.com/tags/index.html","excerpt":"","text":""},{"title":"电视直播","date":"2021-05-17T15:12:05.219Z","updated":"2021-05-17T15:12:05.219Z","comments":true,"path":"tv/index.html","permalink":"https://lznote.com/tv/index.html","excerpt":"","text":"cctv1 湖南卫视"},{"title":"","date":"2021-05-19T09:04:40.987Z","updated":"2021-05-19T09:04:40.987Z","comments":false,"path":"video/index.html","permalink":"https://lznote.com/video/index.html","excerpt":"","text":"我们登上并非我们所选择的舞台，演出并非我们所选择的剧本。 电影动漫电视剧 我是山姆 南极之恋 遗愿清单 火星救援 肖申克的救赎 弱点 何以为家 疾速追杀 当幸福来敲门 完美的世界 最萌警探 一条狗的使命 机器人与弗兰克 热天午后 破碎人生 荒岛余生 星际穿越 灵笼 一念永恒 刺客伍六七 全职高手 完美世界 斗破苍穹 斗罗大陆 我是大神仙 庆余年 闪电侠 地狱神探 黑袍纠超队"},{"title":"实时疫情动态地图","date":"2021-04-28T13:12:12.000Z","updated":"2021-05-17T15:11:58.147Z","comments":true,"path":"yq/index.html","permalink":"https://lznote.com/yq/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo博客提交百度引擎收录","slug":"baiduweb","date":"2021-05-20T12:45:34.000Z","updated":"2021-05-21T13:56:32.065Z","comments":true,"path":"hexo/baiduweb.html","link":"","permalink":"https://lznote.com/hexo/baiduweb.html","excerpt":"","text":"网站还没有提交搜索引擎收集之前，你网站的内容不能直接搜索，只有提交搜索引擎后，搜索引擎才能收集你的网站，并通过爬虫抓取你网站上的东西，这样就可以通过搜索引擎来找到你的网站内容，这篇教程将带你去了解如何将hexo博客提交至百度搜索引擎 查看是否被收录打开百度，搜索框内输入site:域名，其他搜索引擎的查看方法是统一的，如果出现了你网站的内容则已经被收录，若没有看到，则没有被收录。 一:前往百度站长平台添加网站1.访问百度站长平台官网，注册或者登陆百度账号，依次选择【用户中心】-【站点管理】，添加你的网站2.点击添加网站3.依次填写你的网站信息4.到了第三步的时候，验证你的网站信息，前去域名 DNS 添加一个 CNAME 记录即可完成验证5.点击添加记录6.按照百度的要求填写即可7.回到百度站长平台，点击完成验证即可 二:hexo安装推送插件1.在博客根目录安装插件npm install hexo-baidu-url-submit --save，然后在根目录 _config.yml 文件里写入以下配置： 12345baidu_url_submit: count: 1 # 提交最新的多少个链接 host: www.itrhx.com # 在百度站长平台中添加的域名 token: your_token # 秘钥 path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里 其中的 token 可以在【链接提交】-【自动提交】-【主动推送】下面看到，接口调用地址最后面 token=xxxxx 即为你的 token2.在根目录的 _config.yml 文件，大约第 17 行处，url 要改为在百度站长平台添加的域名，也就是你网站的首页地址： 1234# URLurl: https:&#x2F;&#x2F;你的域名root: &#x2F;permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F; 3.最后，加入新的 deployer： 12345678# Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy:- type: git repository: github: # 这是 github 的部署配置 branch: master- type: baidu_url_submitter # 这是新加的主动推送 4.最后执行 hexo g -d 部署一遍即可实现主动推送，推送成功的标志是：在执行部署命令最后会显示类似如下代码： 12&#123;&quot;remain&quot;:4999953,&quot;success&quot;:47&#125;INFO Deploy done: baidu_url_submitter 这表示有 47 个页面已经主动推送成功，remain 的意思是当天剩余的可推送 url 条数 三:生成sitemap站点地图1.首先我们要使用以下命令生成一个网站地图： 12npm install hexo-generator-sitemap --save npm install hexo-generator-baidu-sitemap --save 2.这里也注意一下，将根目录的 _config.yml 文件，大约第 17 行处，url 改为在百度站长平台添加的域名，也就是你网站的首页地址： 1234# URLurl: https:&#x2F;&#x2F;你的域名root: &#x2F;permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F; 3.然后使用命令 hexo g -d 将网站部署上去，然后访问 你的首页/sitemap.xml 或者 你的首页/baidusitemap.xml 就可以看到网站地图了4.其中 sitemap.xml 文件是搜索引擎通用的 sitemap 文件，baidusitemap.xml 是百度专用的 sitemap 文件5.然后来到百度站长平台的 sitemap 提交页面，将你的 sitemap 地址提交即可，如果成功的话状态会显示为正常，初次提交要等几分钟，sitemap.xml 相比 baidusitemap.xml 来说等待时间也会更长，如果以后你博客有新的文章或其他页面，可以点击手动更新文件，更新一下新的 sitemap","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"baidu","slug":"baidu","permalink":"https://lznote.com/tags/baidu/"},{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"},{"name":"sitemap","slug":"sitemap","permalink":"https://lznote.com/tags/sitemap/"}]},{"title":"Java笔记1-基本数据类型","slug":"javaNote1","date":"2021-05-08T12:44:11.000Z","updated":"2021-05-21T13:56:52.809Z","comments":true,"path":"code/javaNote1.html","link":"","permalink":"https://lznote.com/code/javaNote1.html","excerpt":"","text":"Java 基本数据类型变量就是申请内存来存储值。也就是说，当创建变量的时候，需要在内存中申请空间。内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来储存该类型数据。因此，通过定义不同类型的变量，可以在内存中储存整数、小数或者字符。Java 的两大数据类型: 内置数据类型引用数据类型 点击展开 Java语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。byte：byte 数据类型是8位、有符号的，以二进制补码表示的整数；最小值是 -128（-2^7）；最大值是 127（2^7-1）；默认值是 0；byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一；例子：byte a = 100，byte b = -50。short：short 数据类型是 16 位、有符号的以二进制补码表示的整数最小值是 -32768（-2^15）；最大值是 32767（2^15 - 1）；Short 数据类型也可以像 byte 那样节省空间。一个short变量是int型变量所占空间的二分之一；默认值是 0；例子：short s = 1000，short r = -20000。int：int 数据类型是32位、有符号的以二进制补码表示的整数；最小值是 -2,147,483,648（-2^31）；最大值是 2,147,483,647（2^31 - 1）；一般地整型变量默认为 int 类型；默认值是 0 ；例子：int a = 100000, int b = -200000。long：long 数据类型是 64 位、有符号的以二进制补码表示的整数；最小值是 -9,223,372,036,854,775,808（-2^63）；最大值是 9,223,372,036,854,775,807（2^63 -1）；这种类型主要使用在需要比较大整数的系统上；默认值是 0L；例子： long a = 100000L，Long b = -200000L。“L”理论上不分大小写，但是若写成”l”容易与数字”1”混淆，不容易分辩。所以最好大写。float：float 数据类型是单精度、32位、符合IEEE 754标准的浮点数；float 在储存大型浮点数组的时候可节省内存空间；默认值是 0.0f；浮点数不能用来表示精确的值，如货币；例子：float f1 = 234.5f。double：double 数据类型是双精度、64 位、符合 IEEE 754 标准的浮点数；浮点数的默认类型为 double 类型；double类型同样不能表示精确的值，如货币；默认值是 0.0d，例子：double d1 = 7D ;double d2 = 7.;double d3 = 8.0;double d4 = 8.D;double d5 = 12.9867;7 是一个 int 字面量，而 7D，7. 和 8.0 是 double 字面量。boolean：boolean数据类型表示一位的信息；只有两个取值：true 和 false；这种类型只作为一种标志来记录 true/false 情况；默认值是 false；例子：boolean one = true。char：char 类型是一个单一的 16 位 Unicode 字符；最小值是 \\u0000（十进制等效值为 0）；最大值是 \\uffff（即为 65535）；char 数据类型可以储存任何字符；例子：char letter = ‘A’;。 点击展开 在Java中，引用类型的变量非常类似于C/C++的指针。引用类型指向一个对象，指向对象的变量是引用变量。这些变量在声明时被指定为一个特定的类型，比如 Employee、Puppy 等。变量一旦声明后，类型就不能被改变了。对象、数组都是引用数据类型。所有引用类型的默认值都是null。一个引用变量可以用来引用任何与之兼容的类型。例子：Site site = new Site(&quot;Runoob&quot;)。 Java 常量常量特殊的转义字符序列 点击展开 常量在程序运行时是不能被修改的。在 Java 中使用 final 关键字来修饰常量，声明方式和变量类似：1final double PI &#x3D; 3.1415927;虽然常量名也可以用小写，但为了便于识别，通常使用大写字母表示常量。字面量可以赋给任何内置类型的变量。例如：12byte a &#x3D; 68;char a &#x3D; &#39;A&#39;byte、int、long、和short都可以用十进制、16进制以及8进制的方式来表示。当使用字面量的时候，前缀 0 表示 8 进制，而前缀 0x 代表 16 进制, 例如：123int decimal &#x3D; 100;int octal &#x3D; 0144;int hexa &#x3D; 0x64;和其他语言一样，Java的字符串常量也是包含在两个引号之间的字符序列。下面是字符串型字面量的例子：123&quot;Hello World&quot;&quot;two\\nlines&quot;&quot;\\&quot;This is in quotes\\&quot;&quot;字符串常量和字符常量都可以包含任何Unicode字符。例如：12char a &#x3D; &#39;\\u0001&#39;;String a &#x3D; &quot;\\u0001&quot;; 点击展开 \\n 换行 (0x0a)\\r 回车 (0x0d)\\f 换页符(0x0c)\\b 退格 (0x08)\\0 空字符 (0x0)\\s 空格 (0x20)\\t 制表符&quot; 双引号&#39; 单引号\\ 反斜杠\\ddd 八进制字符 (ddd)\\uxxxx 16进制Unicode字符 (xxxx) 类型转换整型、实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运算。转换从低级到高级。 12低 ------------------------------------&gt; 高byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double 数据类型转换必须满足如下规则： 不能对boolean类型进行类型转换。 不能把对象类型转换成不相关类的对象。 在把容量大的类型转换为容量小的类型时必须使用强制类型转换。 转换过程中可能导致溢出或损失精度，例如：12int i &#x3D;128; byte b &#x3D; (byte)i; 因为 byte 类型是 8 位，最大值为127，所以当 int 强制转换为 byte 类型时，值 128 时候就会导致溢出。 浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入，例如：12(int)23.7 &#x3D;&#x3D; 23; (int)-45.89f &#x3D;&#x3D; -45 自动类型转换强制类型转换隐含强制类型转换 点击展开 必须满足转换前的数据类型的位数要低于转换后的数据类型，例如: short数据类型的位数为16位，就可以自动转换位数为32的int类型，同样float数据类型的位数为32，可以自动转换为64位的double类型。实例:12345678910public class ZiDongLeiZhuan&#123; public static void main(String[] args)&#123; char c1&#x3D;&#39;a&#39;;&#x2F;&#x2F;定义一个char类型 int i1 &#x3D; c1;&#x2F;&#x2F;char自动类型转换为int System.out.println(&quot;char自动类型转换为int后的值等于&quot;+i1); char c2 &#x3D; &#39;A&#39;;&#x2F;&#x2F;定义一个char类型 int i2 &#x3D; c2+1;&#x2F;&#x2F;char 类型和 int 类型计算 System.out.println(&quot;char类型和int计算后的值等于&quot;+i2); &#125;&#125;运行结果为:12char自动类型转换为int后的值等于97char类型和int计算后的值等于66解析：c1 的值为字符 a ,查 ASCII 码表可知对应的 int 类型值为 97， A 对应值为 65，所以 i2=65+1=66。 点击展开 条件是转换的数据类型必须是兼容的。格式：(type)value type是要强制类型转换后的数据类型 实例：实例:1234567public class QiangZhiZhuanHuan&#123; public static void main(String[] args)&#123; int i1 &#x3D; 123; byte b &#x3D; (byte)i1;&#x2F;&#x2F;强制类型转换为byte System.out.println(&quot;int强制类型转换为byte后的值等于&quot;+b); &#125;&#125;运行结果：int强制类型转换为byte后的值等于123 点击展开 整数的默认类型是 int。浮点型不存在这种情况，因为在定义 float 类型时必须在数字后面跟上 F 或者 f。","categories":[{"name":"后端","slug":"后端","permalink":"https://lznote.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"java","slug":"java","permalink":"https://lznote.com/tags/java/"},{"name":"后端","slug":"后端","permalink":"https://lznote.com/tags/%E5%90%8E%E7%AB%AF/"},{"name":"开发","slug":"开发","permalink":"https://lznote.com/tags/%E5%BC%80%E5%8F%91/"}]},{"title":"hexo指定文章生成的目录","slug":"hexoFolder","date":"2021-05-02T13:19:11.000Z","updated":"2021-05-08T11:20:13.374Z","comments":true,"path":"hexo/hexoFolder.html","link":"","permalink":"https://lznote.com/hexo/hexoFolder.html","excerpt":"","text":"hexo博客默认的文章路径是 域名/年/月/日/文章名称，这样的多层目录搜索引擎爬虫爬起来非常费力，我们则需要优化文章的URL路径，达到我们优化seo的效果，以及自己想要的指定目录来达成美观且目录辨识度高的需求，下面进入正文 修改hexo的_config.yml配置文件进入根目录的_config.yml配置文件，找到permalink，将 1permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F; 可以修改为 1permalink: :type&#x2F;:title.html 修改md文件type指向进入文章md文件添加一个属性 1type: 你想要指定的文件夹名 如图： 效果修改前的位置：修改后的位置：","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"}]},{"title":"Node版本的升级和降级","slug":"NodeLR","date":"2021-02-08T10:52:47.000Z","updated":"2021-05-08T15:44:30.548Z","comments":true,"path":"code/NodeLR.html","link":"","permalink":"https://lznote.com/code/NodeLR.html","excerpt":"","text":"在开发的工程中，我们可能需要经常切换node版本来应对不同的开发环境，所以需要经常使用不同版本的node一、安装npm插件n ,通过n模块来管理node版本 正文1、全局安装n模块npm instlal -g n2、安装当前稳定版本n stable或者sudo n stable3、安装最新版本的n latest或者sudo n latest4、安装指定版本的noden v8.16.05、卸载指定的node版本n rm v8.16.0二、使用nvm管理node版本1、安装nvmbrew install nvm2、使用nvm安装node版本安装最新版本nvm isntall node安装指定版本nvm install 8.16.03、查看所有版本nvm ls4、切换node版本使用最新版本nvm use node使用指定版本nvm use 10.16.2通常我会使用第二种方式例如：我在一个项目中使用的是node6.13.2,新项目使用的是node8.16.0,先要安装node@8.16.0，nvm install 8.16.0，然后，nvm use 8.16.0","categories":[{"name":"后端","slug":"后端","permalink":"https://lznote.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"node","slug":"node","permalink":"https://lznote.com/tags/node/"},{"name":"npm","slug":"npm","permalink":"https://lznote.com/tags/npm/"}]},{"title":"更换可道云储存地址为挂载硬盘","slug":"kdy2","date":"2021-02-01T12:22:28.000Z","updated":"2021-05-08T15:44:42.711Z","comments":true,"path":"code/kdy2.html","link":"","permalink":"https://lznote.com/code/kdy2.html","excerpt":"","text":"自建服务器的空间有限，玩客云有usb接口，我接了一个u盘，硬盘也是可以的，下面开始操作步骤（此文章为自建服务器更换储存设备教程，对云服务器使用者并无帮助） 准备工作1.需要一个外接储存设备2.储存设备必须是ext4格式的，linux系统必须是ext格式，否则将会挂载失败，普通u盘或是硬盘不是此格式，需要使用硬盘格式工具进行修改 挂载硬盘1.插入硬盘到设备上2.进入ssh，连接上服务器3.查看有哪些储存设备，ssh键入fdisk -l4.可以看到我插入的硬盘是14g，所以是这个，名称叫dev/sdc15.将储存设备挂载到服务器上，ssh键入sudo mount /dev/sdc1/mnt6.测试是否挂载成功cd /mnt，成功进入即为挂载成功 更换储存地址1.可道云官方配置文件给了修改用户存储路径的配置方式配置文件路径：/var/www/kodexplorer/config/2.按照官方给的教程做就行了，官方没说的就是要给移动后的目录给权限，所以下面细说一下吧。3.登录宝塔将可道云目录下的data文复制到或者移动到硬盘目录下4.这是复制好以后5.给该目录权限6.或者可以使用ssh给权限chmod -R 777 /mnt/data/7.前往可道云目录文件夹/config下8.在此目录新建一个文件define.php9.里面填写以下内容 12&lt;?php define(&#x27;DATA_PATH&#x27;,&#x27;`/mnt/data/`&#x27;); 10./mnt/data/为储存设备的data路径11.到这就已经结束了，重新打开可道云即可","categories":[{"name":"后端","slug":"后端","permalink":"https://lznote.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"可道云","slug":"可道云","permalink":"https://lznote.com/tags/%E5%8F%AF%E9%81%93%E4%BA%91/"},{"name":"云服务器","slug":"云服务器","permalink":"https://lznote.com/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"linux","slug":"linux","permalink":"https://lznote.com/tags/linux/"}]},{"title":"自建服务器搭建可道云","slug":"kdy1","date":"2021-01-31T07:19:47.000Z","updated":"2021-05-08T15:44:38.564Z","comments":true,"path":"code/kdy1.html","link":"","permalink":"https://lznote.com/code/kdy1.html","excerpt":"","text":"某宝买了一个玩客云，店家直接帮刷了linux-ubuntu系统，自带的ssh和宝塔，使用手册，玩客云全天侯开机一个月电费不到5块钱，利用玩客云搭建一个本地服务器，再使用内网穿透，搭建一个外网访问的云服务器 正文1.可道云依赖php,最后php7以上，这里安装了php7.22.添加站点3.文本框填入你的域名，这里填了卖家送的域名，根目录默认，php选择刚刚安装的php版本4.点击进入根目录5.下载可道云的服务器端官方包，点击前往下载6.将包放入网站根目录，然后解压，使用宝塔自带的解压，或者使用ssh连接，用命令解压均可7.配置好内网穿透，使用域名访问即可登录可道云","categories":[{"name":"后端","slug":"后端","permalink":"https://lznote.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"可道云","slug":"可道云","permalink":"https://lznote.com/tags/%E5%8F%AF%E9%81%93%E4%BA%91/"},{"name":"云服务器","slug":"云服务器","permalink":"https://lznote.com/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"linux","slug":"linux","permalink":"https://lznote.com/tags/linux/"}]},{"title":"hexo友链优化","slug":"hexoLinks","date":"2021-01-24T12:46:29.000Z","updated":"2021-04-29T11:30:55.120Z","comments":true,"path":"hexo/hexoLinks.html","link":"","permalink":"https://lznote.com/hexo/hexoLinks.html","excerpt":"","text":"实现对hexo-fluid的友链自定义，可以在下面放置评论区，以及md格式文字 正文1.关闭主题配置里面的links2.新建一个links页面hexo new page links3.位于source文件下可见links的md文件下自定义显示的页面了，进入修改4.添加此两项，意为开启评论以及links样式5.进入links.ejs修改，在其末尾处添加以下代码，使评论功能和md格式文字生效 12345678910&lt;% if(page.comments &amp;&amp; theme.post.comments.enable) &#123; %&gt; &lt;!-- Comments --&gt; &lt;article class=&quot;comments&quot; id=&quot;comments&quot;&gt; &lt;% var type = &#x27;_partial/comments/&#x27; + theme.post.comments.type %&gt; &lt;%- partial(type) %&gt; &lt;/article&gt;&lt;% &#125; %&gt;&lt;div class=&quot;page-content&quot;&gt; &lt;%- page.content %&gt;&lt;/div&gt; 6.现在即可在links的md文件下自定义显示的界面了","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"},{"name":"ejs","slug":"ejs","permalink":"https://lznote.com/tags/ejs/"},{"name":"comment","slug":"comment","permalink":"https://lznote.com/tags/comment/"}]},{"title":"利用github+jsDelivr搭建图床","slug":"GithubPhotoBed","date":"2021-01-23T07:57:34.000Z","updated":"2021-05-08T11:21:27.915Z","comments":true,"path":"hexo/GithubPhotoBed.html","link":"","permalink":"https://lznote.com/hexo/GithubPhotoBed.html","excerpt":"","text":"前言图床是什么？图床就是图片存放的地址，用来节省服务器的资源，也可以变相的提升网站加载速度你是否正在遭遇以下问题：1.在用静态博客网站写文章，图片不知怎么保存，保存在哪里2.网上复制的心仪图片链接，用着用着某一天就失效了3.特意花钱租个云服务器托管图片，划不来，而且上传操作好繁琐4.市面上形形色色的免费图床，但都有时间期限，要么就是速度慢，存储空间小，有的还限流量现在可以利用jsdelivr加速github仓库来实现图床，无论是否使用jsdelivr你都可以利用github搭建一个图床，但缺点是国内加载速度非常慢，严重影响我们的需求，为此我们还需要利用jsdelivr的cdn加速，jsdelivr在国内的节点有上百个，这样我们就得到了一个访问速度贼快，且免费，空间无限的一个图床。下面就是教程了，有疑问有错误请评论指出，谢谢，仅以此文章帮助烂记性的自己和正在观看此博客的你。 新建github仓库用来存储图片1.登录你的 github 账号，点击跳转登录，右上角加号处点击此选项，创建一个新的仓库2.详细设置3.此仓库你可以上传你的图片，用来达到存储的目的 利用jsdelivr加速访问1.现在我们直接访问图片的链接时，速度是很慢的，所以我们需要利用jsdelivr加速访问我们的图片2.假设我们的仓库中有一张test.png的图片3.使用github的链接直接访问是这样访问的https://github.com/github用户名/仓库名/raw/master/test.png，经过测试得知，加载速度是非常不理想的，此时将图片链接放入我们的网站内，将会导致网页加载速度十分缓慢，图片会一直在加载状态4.现在使用jsdelivr访问非常简单，即把图片地址链接域名改为 CDN 的域名，是这样的访问格式，https://cdn.jsdelivr.net/gh/github用户名/仓库名@master/test.png，经过测试，现在的访问速度已经起飞了 利用PicGo工具便捷管理图片1.前往picgo的GitHub仓库下载此工具，点击前往下载，如果下载速度太慢，科学上网下载会快一点，下载好后安装即可2.然后，在 github 上创建一个 token1，点击右上角账号上的 settings3.然后左侧点击 developer settings ，再点击 personal access tokens ，然后点击 generate new token4.Note 用来说明你创建 token 的用途，然后 scopes 只需要选 repo 的所有选项即可5.最后拉到底部，点击 generate token ，即可成功6.找个地方记下这一串 token，等会需要用到。（如果没有记住，等再查看时就只能重新生成了）7.打开picgo工具进行配置 在 PicGo 中，找到图床设置 -&gt; GitHub图床。 仓库名即为你的github账号/图片仓库名 分支名就用默认的 master Token 就填写刚才我们生成的 Token 存储路径如果需要指定子目录可以填写例如 img/ 。我这里没有填，就会上传到我图片仓库的根目录。 自定义域名就填写 jsDelivr 的域名，https://cdn.jsdelivr.net/gh/github用户名/仓库名@master 最后设为默认图床，下次在 typora 上传图片就会自动上传到 github 图床了 总结-便捷使用方法1.点击上传图片，此时如果你上面的配置正确，上传的图片将会同步至github仓库内2.点击相册，可见你的图片，点击此按钮，即可复制图片链接3.你也可以指定上传后的链接格式4.得到链接后，你就可以尽情的使用了，加载速度十分迅速，白嫖真香，以后想要存图片就上传，接着复制链接出来使用，非常的方便","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"jsDelivr","slug":"jsDelivr","permalink":"https://lznote.com/tags/jsDelivr/"},{"name":"github","slug":"github","permalink":"https://lznote.com/tags/github/"},{"name":"图床","slug":"图床","permalink":"https://lznote.com/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"js实现网站飘雪","slug":"jspx","date":"2021-01-19T12:06:22.000Z","updated":"2021-04-29T11:28:22.585Z","comments":true,"path":"hexo/jspx.html","link":"","permalink":"https://lznote.com/hexo/jspx.html","excerpt":"","text":"说明效果预览： 新建snow.js文件详细实现步骤：1.在 \\Hexo\\themes\\网站主题\\source\\js 目录下新建一个 snow.js 文件，粘贴以下代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127/* 控制下雪 */function snowFall(snow) &#123; /* 可配置属性 */ snow = snow || &#123;&#125;; this.maxFlake = snow.maxFlake || 200; /* 最多片数 */ this.flakeSize = snow.flakeSize || 10; /* 雪花形状 */ this.fallSpeed = snow.fallSpeed || 1; /* 坠落速度 */&#125;/* 兼容写法 */requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) &#123; setTimeout(callback, 1000 / 60); &#125;; cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.oCancelAnimationFrame;/* 开始下雪 */snowFall.prototype.start = function()&#123; /* 创建画布 */ snowCanvas.apply(this); /* 创建雪花形状 */ createFlakes.apply(this); /* 画雪 */ drawSnow.apply(this)&#125;/* 创建画布 */function snowCanvas() &#123; /* 添加Dom结点 */ var snowcanvas = document.createElement(&quot;canvas&quot;); snowcanvas.id = &quot;snowfall&quot;; snowcanvas.width = window.innerWidth; snowcanvas.height = document.body.clientHeight; snowcanvas.setAttribute(&quot;style&quot;, &quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;); document.getElementsByTagName(&quot;body&quot;)[0].appendChild(snowcanvas); this.canvas = snowcanvas; this.ctx = snowcanvas.getContext(&quot;2d&quot;); /* 窗口大小改变的处理 */ window.onresize = function() &#123; snowcanvas.width = window.innerWidth; /* snowcanvas.height = window.innerHeight */ &#125;&#125;/* 雪运动对象 */function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) &#123; this.x = Math.floor(Math.random() * canvasWidth); /* x坐标 */ this.y = Math.floor(Math.random() * canvasHeight); /* y坐标 */ this.size = Math.random() * flakeSize + 2; /* 形状 */ this.maxSize = flakeSize; /* 最大形状 */ this.speed = Math.random() * 1 + fallSpeed; /* 坠落速度 */ this.fallSpeed = fallSpeed; /* 坠落速度 */ this.velY = this.speed; /* Y方向速度 */ this.velX = 0; /* X方向速度 */ this.stepSize = Math.random() / 30; /* 步长 */ this.step = 0 /* 步数 */&#125;flakeMove.prototype.update = function() &#123; var x = this.x, y = this.y; /* 左右摆动(余弦) */ this.velX *= 0.98; if (this.velY &lt;= this.speed) &#123; this.velY = this.speed &#125; this.velX += Math.cos(this.step += .05) * this.stepSize; this.y += this.velY; this.x += this.velX; /* 飞出边界的处理 */ if (this.x &gt;= canvas.width || this.x &lt;= 0 || this.y &gt;= canvas.height || this.y &lt;= 0) &#123; this.reset(canvas.width, canvas.height) &#125;&#125;;/* 飞出边界-放置最顶端继续坠落 */flakeMove.prototype.reset = function(width, height) &#123; this.x = Math.floor(Math.random() * width); this.y = 0; this.size = Math.random() * this.maxSize + 2; this.speed = Math.random() * 1 + this.fallSpeed; this.velY = this.speed; this.velX = 0;&#125;;// 渲染雪花-随机形状（此处可修改雪花颜色！！！）flakeMove.prototype.render = function(ctx) &#123; var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size); snowFlake.addColorStop(0, &quot;rgba(255, 255, 255, 0.9)&quot;); /* 此处是雪花颜色，默认是白色 */ snowFlake.addColorStop(.5, &quot;rgba(255, 255, 255, 0.5)&quot;); /* 若要改为其他颜色，请自行查 */ snowFlake.addColorStop(1, &quot;rgba(255, 255, 255, 0)&quot;); /* 找16进制的RGB 颜色代码。 */ ctx.save(); ctx.fillStyle = snowFlake; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); ctx.restore();&#125;;/* 创建雪花-定义形状 */function createFlakes() &#123; var maxFlake = this.maxFlake, flakes = this.flakes = [], canvas = this.canvas; for (var i = 0; i &lt; maxFlake; i++) &#123; flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed)) &#125;&#125;/* 画雪 */function drawSnow() &#123; var maxFlake = this.maxFlake, flakes = this.flakes; ctx = this.ctx, canvas = this.canvas, that = this; /* 清空雪花 */ ctx.clearRect(0, 0, canvas.width, canvas.height); for (var e = 0; e &lt; maxFlake; e++) &#123; flakes[e].update(); flakes[e].render(ctx); &#125; /* 一帧一帧的画 */ this.loop = requestAnimationFrame(function() &#123; drawSnow.apply(that); &#125;);&#125;/* 调用及控制方法 */var snow = new snowFall(&#123;maxFlake:60&#125;);snow.start(); 引用snow.js1.在 \\Hexo\\themes\\网站主题\\layout\\layout.ejs 文件里引用即可： 12&lt;!-- 雪花特效 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;\\js\\snow.js&quot;&gt;&lt;/script&gt; 常见问题1.没有效果，请确认网页是否已载入JQurey，如果没有请在下雪代码之前引入JQ即可： 12&lt;script type=&quot;text/javascript&quot; src=&quot;http://libs.baidu.com/jquery/1.8.3/jquery.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;&gt;&lt;/script&gt;","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"},{"name":"js","slug":"js","permalink":"https://lznote.com/tags/js/"}]},{"title":"将域名解析到github仓库地址","slug":"webNameGithub","date":"2021-01-07T14:34:12.000Z","updated":"2021-04-29T11:34:06.755Z","comments":true,"path":"hexo/webNameGithub.html","link":"","permalink":"https://lznote.com/hexo/webNameGithub.html","excerpt":"","text":"说明实现不再通过繁杂的github地址githubname.github.io访问仓库，通过简短的域名访问，方便记忆，本篇就讲讲怎么将域名解析到github地址，实现域名访问仓库。 购买域名1.国内的域名服务商有腾讯云，还有阿里云的等。下面以阿里云的为例：2.购买了自己心仪的域名后，进入阿里云的管理控制台-域名与网站-域名就可以看到购买的域名此时的域名状态是未实名认证的，然后就是实名认证（一般需要2小时左右）。 域名解析1.首先获取自己 github 的二级域名的 IP地址，windows 下直接在 cmd 里 Ping 一下自己的github仓库地址就会得到 IP 地址2.下面通过 DNS域名解析将购买的域名指向 github 的二级域名：username.github.io，点击确定即可，进入阿里云的管理控制台-域名与网站-云解析 DNS，进入域名的解析设置，点击添加记录，将得到的 IP 地址填到记录值一栏，记录类型为：A，主机记录为：@，线路为默认，点击确定即可3.再次点击添加记录，记录类型为：CNAME，主机记录为：www，线路默认，记录值为你的仓库地址：username.github.io，点击确定即可 设置CNAME1.在你的hexo项目下，source 文件夹下面创建 CNAME 文件，没有后缀名的。1.在里面写上购买的域名。 github设置1.在 github 上面，打开 username.github.io 项目的（Settings）设置，一直往下划，然后在 GitHub Pages的 Custom domain设置里填上购买的域名。2.找到GitHub Pages的 Custom domain，填上域名，勾选上https选项即可。3.到此，一切就准备就绪了，现在就可以通过简洁的域名访问我们的仓库了。 尾记1.有错误请评论指出，谢谢，希望此文章能够帮助到烂记性的自己和正在观看此博客的你。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"github","slug":"github","permalink":"https://lznote.com/tags/github/"},{"name":"阿里云","slug":"阿里云","permalink":"https://lznote.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"},{"name":"域名","slug":"域名","permalink":"https://lznote.com/tags/%E5%9F%9F%E5%90%8D/"}]},{"title":"如何让谷歌收录你的网站","slug":"gooleweb","date":"2021-01-06T14:39:13.000Z","updated":"2021-04-29T11:36:00.398Z","comments":true,"path":"hexo/gooleweb.html","link":"","permalink":"https://lznote.com/hexo/gooleweb.html","excerpt":"","text":"说明网站在没有提交搜索引擎收录之前，直接搜索你网站的内容是搜不到的，只有提交搜索引擎之后，搜索引擎才能收录你的站点，通过爬虫抓取你网站的东西。 步骤一:修改config.yml下的url在hexo根目录的_config.yml文件，找到url，将url的值改为自己的域名 12url: 域名例如：url: https:&#x2F;&#x2F;www.zyxlfl.top 步骤二: 生成sitemap1.首先我们要使用git键入以下命令生成一个网站地图：2.两种方式任选其一，第一种方式报错则使用第二种 12npm install hexo-generator-sitemap --savecnpm install hexo-generator-sitemap --save 步骤三:修改_config.yml文件1.在hexo根目录的_config.yml文件添加以下内容： 123# 自动生成sitemapsitemap: path: sitemap.xml 2.然后使用git工具hexo g生成一下，接着hexo d上传部署即可3.此时，进入 public 目录，你会发现里面有 sitemap.xml文件，这就是生成的站点地图。里面包含了网站上所有页面的链接，搜索引擎通过这个文件来抓取网站页面 步骤四:进入谷歌站长工具配置（需要科学上网）1.现在我们需要将网站提交谷歌搜索引擎搜索，进入谷歌站长平台，（需要科学上网）点击跳转：searchconsole登录你的谷歌账号之后会让你验证网站所有权：2.选择第一个，填入你的域名，子域名部分（例如：zyxlfl.top）3.确定之后会给你一个 TXT 的记录值，复制它到你域名 DNS 增加一个 TXT 记录，点击验证即可4.前往域名控制台域名解析处配置，将TXT值复制到记录值处5.配置完毕即可6.之后我们点击站点地图，随后在添加新的站点地图中将sitemap.xml的位置填上去，点击提交即可7.位置为：域名/sitemap.xml，例如我的是： 1https:&#x2F;&#x2F;www.zyxlfl.top&#x2F;sitemap.xml 8.将此链接填上点击提交，下面出现成功即可，谷歌收录很快，几个小时就会收录成功了9.查看是否被收录，谷歌搜索以下内容即可： 12site:域名例如：site:www.zyxlfl.top 尾记1.有错误请评论指出，谢谢，希望文章能够帮助到烂记性的自己和正在观看此博客的你。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"},{"name":"sitemap","slug":"sitemap","permalink":"https://lznote.com/tags/sitemap/"},{"name":"google","slug":"google","permalink":"https://lznote.com/tags/google/"}]},{"title":"网站添加valine评论","slug":"hexoValine","date":"2020-12-21T13:58:24.000Z","updated":"2021-04-29T11:37:03.313Z","comments":true,"path":"hexo/hexoValine.html","link":"","permalink":"https://lznote.com/hexo/hexoValine.html","excerpt":"","text":"修改fluid主题配置文件1.进入fluid主题下的配置文件(config.yml)2.找到comments配置，将enable的值改为true，type的值改为valine3.往下划，找到valine的配置，可见appid与appkey以及serverURLs此3处留空 前网官网注册获取appid与appkey以及serverURLs点击前往注册LeanCloud1.注册完毕后，进入控制台后点击左下角创建应用2.应用创建好以后，进入刚刚创建的应用，选择左下角的设置&gt;应用Key，然后就能看到你的APP ID和APP Key了，下面可找到serverURLs3.为了你的数据安全，请设置自己的安全域名，此操作时防止他人进入你的网站查看源码看见你的id和key然后使用你的，设置安全域名后，只有你设置的域名才可以使用该id与key 返回配置文件，将3个留空处填上得到的3个值即可1.将得到的值填上2.重启hexo即可hexo cleanhexo ghexo dhexo s 评论的管理1.由于Valine 是无后端评论系统，所以也就没有开发评论数据管理功能。请自行登录Leancloud应用管理。2.具体步骤：登录&gt;选择你创建的应用&gt;存储&gt;选择Class&gt;Comment，然后就可以尽情的发挥你的权利 尾记1.有错误请评论指出，谢谢，希望文章能够帮助到烂记性的自己和正在观看此博客的你。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"}]},{"title":"实现网站文章加密","slug":"hexoEncrypt","date":"2020-12-21T13:58:03.000Z","updated":"2021-04-29T11:36:33.431Z","comments":true,"path":"hexo/hexoEncrypt.html","link":"","permalink":"https://lznote.com/hexo/hexoEncrypt.html","excerpt":"","text":"安装encrypt插件1.在博客目录下执行下面的指令安装encrypt 1cnpm install --save hexo-blog-encrypt 2.安装完成后，在package.json文件的dependecies依赖中可以看到encrypt插件，证明安装成功 123 &quot;dependencies&quot;: &#123; &quot;hexo-blog-encrypt&quot;: &quot;^3.0.13&quot;,&#125; 加密文章设置(password属性)1.将”password”字段添加到文章信息头部 123title: 博客标题date: 2020-11-07 23:05:38password: 123 执行hexo g&amp;&amp;hexo s后，便可查看1.输入密码错误后，界面提示 对要加密的文章 ，修改文章信息头如下12345password: 1234abstract: 这里有东西被加密了，需要输入密码查看哦。message: 您好，这里需要密码。wrong_pass_message: 抱歉，这个密码看着不太对，请再试试。wrong_hash_message: 抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。 encrypt具体配置文件1.文件位于blog\\node_modules\\hexo-blog-encrypt下，可自行修改配 尾记1.有错误请评论指出，谢谢，希望文章能够帮助到烂记性的自己和正在观看此博客的你。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"}]},{"title":"添加网站访问统计","slug":"webNum","date":"2020-12-21T12:49:05.000Z","updated":"2021-04-29T11:36:49.321Z","comments":true,"path":"hexo/webNum.html","link":"","permalink":"https://lznote.com/hexo/webNum.html","excerpt":"","text":"不蒜子统计常见问题 修改fluid主题配置文件1.进入fluid主题下的配置文件(config.yml)2.找到页脚footer部分配置3.往下翻，找到 statistics 的配置，将 enable 的值改为 true 即可 可能会发生的问题以及解决方法1.初始统计数值过大，此为正常现在，在本地访问时，你看到的数值将会是这样，你只需要提交到github仓库或者是你的服务器上即可解决这个问题2.访问量与访客数同比增加，刷新一次加一次访客数，这是不应该发生的 3.我们需要让他统计ip，同一个ip访问，将只增加访问量，不增加访客数才是正常的4.这可能是因为，浏览器在2020.1月已经不支持http的资源加载了，只要将你的网站开启https访问即可5.这里演示你的博客是建立在github上的情况，在你自己的服务器上，百度如何开启https访问即可 第一步登录github，点击登录 点击你存放博客的仓库 点击settings 划到最底部，将https这个选择选中即可 6.这样就可以解决这个问题 尾记1.有错误请评论指出，谢谢，希望文章能够帮助到烂记性的自己和正在观看此博客的你。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"}]},{"title":"简单的添加网站运行时间","slug":"webTime","date":"2020-12-21T12:44:11.000Z","updated":"2021-05-08T16:29:42.250Z","comments":true,"path":"hexo/webTime.html","link":"","permalink":"https://lznote.com/hexo/webTime.html","excerpt":"","text":"修改footer.ejs文件1.文件位于themes/fluid/layout/partial ,你只需要在里面加一个div标签就可以了，里面原本是有两个div标签，你放的顺序影响着显示的顺序。直接将下列代码复制即可 123456789101112131415161718192021222324252627282930&lt;div&gt; &lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt; &lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt; &lt;script&gt; var now = new Date(); function createtime()&#123; var grt= new Date(&quot;10/01/2020 8:00:00&quot;);//此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 )&#123; hnum = &quot;0&quot; + hnum; &#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); i f(String(mnum).length ==1 )&#123; mnum = &quot;0&quot; + mnum; &#125; seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 )&#123; snum = &quot;0&quot; + snum; &#125; document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已经运行&amp;nbsp&quot;+dnum+&quot;&amp;nbsp天&quot;; document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot;&amp;nbsp小时&amp;nbsp&quot; + mnum + &quot;&amp;nbsp分&amp;nbsp&quot; + snum + &quot;&amp;nbsp秒啦~~&quot;; &#125; setInterval(&quot;createtime()&quot;,250); &lt;/script&gt; &lt;/div&gt; 尾记1.有错误请评论指出，谢谢，希望文章能够帮助到烂记性的自己和正在观看此博客的你。","categories":[{"name":"前端","slug":"前端","permalink":"https://lznote.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"},{"name":"js","slug":"js","permalink":"https://lznote.com/tags/js/"},{"name":"html","slug":"html","permalink":"https://lznote.com/tags/html/"}]},{"title":"个人博客搭建记录日志-更换主题","slug":"hexoThree","date":"2020-08-09T03:10:24.000Z","updated":"2021-04-29T11:33:16.731Z","comments":true,"path":"hexo/hexoThree.html","link":"","permalink":"https://lznote.com/hexo/hexoThree.html","excerpt":"","text":"操作步骤1.登录到https://hexo.io/themes 寻找到合适的开源主题2.点击跳转到github下载源码zip3.解压，放到 C:\\用户\\你的用户名\\blog\\themes 下 4.打开blog目录下的 _config.yml 配置文件，打开找到 theme: 在其后写放到themes文件夹下的主题名字5.打开 Git-Bash 输入 cd blog 进入目录6.输入 hexo clean 7.输入 hexo g8.输入 hexo d 开源主题地址https://hexo.io/themes","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://lznote.com/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"个人博客搭建记录日志-github托管","slug":"hexoTwo","date":"2020-08-07T06:20:26.000Z","updated":"2021-04-29T11:33:19.866Z","comments":true,"path":"hexo/hexoTwo.html","link":"","permalink":"https://lznote.com/hexo/hexoTwo.html","excerpt":"","text":"操作步骤1.登录github创建储存库，名称：github用户名.github.io2.打开 Git-Bash 输入 cd blog进入目录3.安装github部署插件，输入 cnpm install hexo-deployer-git --save 回车4.打开配置_config.yml文件，路径：blog目录下5.打开后，文件的最底部，在type:后面加上git（type: git）—冒号后面要打空格6.然后换行加上repo:,接着在repo:后面加上储存库地址（repo: 此处为点击储存库然后复制浏览器地址栏的地址.git）—冒号后面要打空格7.然后换行加上branh: master —冒号后面要打空格 ，然后保存关闭8.输入 hexo g 生成9.输入 hexo d 部署上传即可10.注意：hexo d 上传报错时，则是没有进行身份验证，此时分别输入 git config –global user.email “github账号” 以及 git config –global user.name “github用户名” 进行验证即可11.然后重新部署即可12.通过存储库名称即可实现托管进行云端访问 （例如： https://zyxlfl.top ）","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://lznote.com/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"个人博客搭建记录日志-基础搭建","slug":"hexoOne","date":"2020-08-07T04:19:52.000Z","updated":"2021-04-29T11:33:24.197Z","comments":true,"path":"hexo/hexoOne.html","link":"","permalink":"https://lznote.com/hexo/hexoOne.html","excerpt":"","text":"利用到的工具和环境win10环境和hexo博客框架工具下载链接位于文章尾部 1.node.js 2.git 操作步骤1.安装node.js (建议安装v12.14.0版本)2.成功后win+R打开运行，输入cmd，回车 3.在控制台输入 node -v 可查看版本验证是否安装成功 4.安装包管理器，输入 npm install -g cnpm –registry=https://registry.npm.taobao.org 回车，等待下载 5.下载结束后输入cnpm回车，出现提示证明下载安装成功，输入cnpm -v可查看版本号 6.开始安装博客全局框架，接着输入 cnpm install -g hexo-cli 回车，等待下载安装，安装完毕后输入 hexo -v 查看版本号验证是否安装成功 7.安装git，详细步骤百度 git安装 会有详细安装教程（也可全部下一步傻瓜式安装，为了保险起见做好还是看一下安装教程） 8.安装完毕后，双击打开刚刚安装好的 Git-Bash （点击win的徽标按键，最近添加里面可以看到刚刚安装的git） 9.输入 mkdir blog 会创建一个文件夹blog在c盘里（路径：c/用户/你的电脑用户名/blog） 10.输入 cd blog （以下所有控制台操作都需进入blog目录下输入）11.输入 hexo init （初始化博客）12.输入 hexo s （启动博客）13.出现 Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.dir 证明启动成功，Ctrl+C的意思是停止博客运行14.打开浏览器输入 http://localhost:4000 即可访问初始博客16.写博客指令输入 hexo n “文章名称” 回车，会创建一个只有名称的空文章17.文章路径在 c盘/用户/你的电脑用户名/blog\\source_posts里面，通过我的电脑打开，点击你的文章用记事本打开即可写博客，在—这3条杠下面写18.清理一下博客，输入 hexo clean 回车19.生成，输入 hexo g 回车20.运行，输入 hexo s 回车21.打开浏览器输入 http://localhost:4000 即可。 下载地址node.js — nodejs.org git — https://git-scm.com/downloads","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://lznote.com/tags/%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/categories/hexo/"},{"name":"后端","slug":"后端","permalink":"https://lznote.com/categories/%E5%90%8E%E7%AB%AF/"},{"name":"前端","slug":"前端","permalink":"https://lznote.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"baidu","slug":"baidu","permalink":"https://lznote.com/tags/baidu/"},{"name":"hexo","slug":"hexo","permalink":"https://lznote.com/tags/hexo/"},{"name":"sitemap","slug":"sitemap","permalink":"https://lznote.com/tags/sitemap/"},{"name":"java","slug":"java","permalink":"https://lznote.com/tags/java/"},{"name":"后端","slug":"后端","permalink":"https://lznote.com/tags/%E5%90%8E%E7%AB%AF/"},{"name":"开发","slug":"开发","permalink":"https://lznote.com/tags/%E5%BC%80%E5%8F%91/"},{"name":"node","slug":"node","permalink":"https://lznote.com/tags/node/"},{"name":"npm","slug":"npm","permalink":"https://lznote.com/tags/npm/"},{"name":"可道云","slug":"可道云","permalink":"https://lznote.com/tags/%E5%8F%AF%E9%81%93%E4%BA%91/"},{"name":"云服务器","slug":"云服务器","permalink":"https://lznote.com/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"linux","slug":"linux","permalink":"https://lznote.com/tags/linux/"},{"name":"ejs","slug":"ejs","permalink":"https://lznote.com/tags/ejs/"},{"name":"comment","slug":"comment","permalink":"https://lznote.com/tags/comment/"},{"name":"jsDelivr","slug":"jsDelivr","permalink":"https://lznote.com/tags/jsDelivr/"},{"name":"github","slug":"github","permalink":"https://lznote.com/tags/github/"},{"name":"图床","slug":"图床","permalink":"https://lznote.com/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"js","slug":"js","permalink":"https://lznote.com/tags/js/"},{"name":"阿里云","slug":"阿里云","permalink":"https://lznote.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"},{"name":"域名","slug":"域名","permalink":"https://lznote.com/tags/%E5%9F%9F%E5%90%8D/"},{"name":"google","slug":"google","permalink":"https://lznote.com/tags/google/"},{"name":"html","slug":"html","permalink":"https://lznote.com/tags/html/"},{"name":"博客","slug":"博客","permalink":"https://lznote.com/tags/%E5%8D%9A%E5%AE%A2/"}]}